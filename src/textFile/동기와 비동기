👀동기
ㄴ 동기적으로 처리한다.
ㄴ (흐름)순서대로 처리한다.
ㄴ 쓰레드 : 여러 작업을 순서대로 처리
console.log("1")
console.log("2")
console.log("3")
ㄴ 💥기본적으로는 모든 코드가 동기적으로 실행된다.
ㄴ 그래서 예를 들면 이러한 코드를 실행시키면 1 -> 2 -> 3이 순서대로 출력된다.
ㄴ 함수도 마찬가지다. 호출순서대로~

taskA();//0.1초 소요
taskB();//10초 소요
taskC();//0.2초 소요
ㄴ 동시적 실행에 치명적인 단점은 다음 작업을 못함.

멀티쓰레드
ㄴ 여러개 쓰레드를 사용하면 해당 작업이 전체 작업에 영향을 주지 않지만
ㄴ 💥 자바스크립트 엔진에는 쓰레드가 1개 밖에 없음.(그렇다면? 비동기 방식이 있다.)


💥비동기 방식
ㄴ 동시에 작업을 수행할 수 있음.
ㄴ 작업의 결과값으로 또다른 작업을 해야한다면 callback함수로 작업을 이을 수 있다.
ㄴㄴsetTimeOut() : 내장함수
ㄴ 

💥 쓰레드 한개로 여러작업을 동시에 어떻게 수행하나?
ㄴ 비동기 작업들은 자바스크립트 엔진이 아닌 'Web APIs'에서 실행된다.
ㄴㄴ Web APIs : 브라우저가 관리하는 별도의 작업 공간
ㄴㄴ 💥 (스토리1)자바스크립트 엔진이 비동기 함수를 만나게 되면은 Web APIs에게 부탁을 함.(曰 : 실행해줘 Web APIs(setTimeout 타이머와 콜백함수까지 같이 넘겨줌))
ㄴㄴ 💥 (스토리1-2)자바스크립트엔진은 그 다음작업을 이어나가고, Web APIs가 타이머가 종료가되면 다시 JS 엔진에다가 콜백함수를 반환한다.


//참고 : chapter11.js 