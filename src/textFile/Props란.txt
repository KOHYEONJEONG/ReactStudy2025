
리액트에서는 부모 컴포넌트가 이런 자식 컴포넌트들에게 마치 함수의 인수를 전달하듯이
원하는 값을 전달해주는 게 가능하다.

이때 컴포넌트에 전달된 값들을 특별히 Props 라고 한다. 

Props = Properties 줄임말

EX) 각각 다른 UI를 렌더링하도록 만들 수 있다.

⭐리액트의 핵심 기능 중 하나!!!!!⭐

단, 부모가 자신한테만 전달할 수 있음
(형제 컴포넌트 끼리 공유 불가)
공유할 변수는 부모컴포넌트에서 생성해야함.

===================================사용법========================================
형태 : 객체
-> 📌비구조화할당(구조분해 할당 = 간편하게 꺼내는 문법) 문법을 사용하면 더 간결한 코드 사용 가능
ㄴ 참고 : 비구조화 할당(구조분해).txt

⏬비구조화 할당(=구조 분해 할당) 방법
const Button = (props) => {
사용전 :
console.log(props.name)

📌const Button = ({ text, color = "bl", children }) => {
사용후 :
console.log(text);

사용2 :
const handleChange = (e) => { //e는 이벤트 객체
  const { name, value } = e.target; //🚩 자주 쓰이는 실무 문법
  console.log(name, value);
};

또는
사용2-2: 한번에 통합 이벤트핸들러로 관리하는 방법(객체형태로 관리)

const [form, setForm] = useState({
  username: '',
  email: '',
});

const handleChange = (e) => {
  const { name, value } = e.target;

  setForm(prev => ({
    ...prev,
    [name]: value, // name을 key로 사용해서 동적으로 업데이트!
  }));
};

참고 : src/components/Register.jsx

사용3:
const user = { id: 1, name: 'John', age: 30 };

// 비구조화
const { name, age } = user; //key 값으로 매칭